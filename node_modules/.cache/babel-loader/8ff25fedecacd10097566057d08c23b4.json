{"ast":null,"code":"import{createStore,compose,applyMiddleware}from'redux';import createSagaMiddleware from'redux-saga';import{ArgumentError,promiseMiddleware}from'@adobe/redux-saga-promise';import modules from'./modules';import rootSaga from'./sagas';var sagaMiddleware=createSagaMiddleware({onError:function onError(error){if(error instanceof ArgumentError){console.log('Oops, programmer error! I called redux-saga-promise incorrectly:',error);}else{// ...\n}}});var composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;var store=createStore(modules,composeEnhancers(applyMiddleware(promiseMiddleware,sagaMiddleware)));sagaMiddleware.run(rootSaga);export default store;","map":{"version":3,"sources":["/mnt/c/react/react-admin/src/store/index.js"],"names":["createStore","compose","applyMiddleware","createSagaMiddleware","ArgumentError","promiseMiddleware","modules","rootSaga","sagaMiddleware","onError","error","console","log","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,OAAtB,CAA+BC,eAA/B,KAAsD,OAAtD,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,OAASC,aAAT,CAAwBC,iBAAxB,KAAiD,2BAAjD,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,SAArB,CAEA,GAAMC,CAAAA,cAAc,CAAGL,oBAAoB,CAAC,CACxCM,OAAO,CAAE,iBAACC,KAAD,CAAW,CAChB,GAAIA,KAAK,WAAYN,CAAAA,aAArB,CAAoC,CAChCO,OAAO,CAACC,GAAR,CAAY,kEAAZ,CAAgFF,KAAhF,EACH,CAFD,IAEO,CACH;AACH,CACJ,CAPuC,CAAD,CAA3C,CASA,GAAMG,CAAAA,gBAAgB,CAAGC,MAAM,CAACC,oCAAP,EAA+Cd,OAAxE,CAEA,GAAMe,CAAAA,KAAK,CAAGhB,WAAW,CACrBM,OADqB,CAErBO,gBAAgB,CACZX,eAAe,CACXG,iBADW,CAEXG,cAFW,CADH,CAFK,CAAzB,CAUAA,cAAc,CAACS,GAAf,CAAmBV,QAAnB,EAEA,cAAeS,CAAAA,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { ArgumentError, promiseMiddleware } from '@adobe/redux-saga-promise'\r\nimport modules from './modules'\r\nimport rootSaga from './sagas'\r\n\r\nconst sagaMiddleware = createSagaMiddleware({\r\n    onError: (error) => {\r\n        if (error instanceof ArgumentError) {\r\n            console.log('Oops, programmer error! I called redux-saga-promise incorrectly:', error)\r\n        } else {\r\n            // ...\r\n        }\r\n    }\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(\r\n    modules,\r\n    composeEnhancers(\r\n        applyMiddleware(\r\n            promiseMiddleware,\r\n            sagaMiddleware,\r\n        )\r\n    )\r\n)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}