{"ast":null,"code":"import { all, call, fork, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { implementPromiseAction } from '@adobe/redux-saga-promise';\nimport API from '../../api';\nimport { TODO_LIST_LOAD, ADD_TODO, REMOVE_TODO, CHECK_TODO } from '../modules/todo';\n/* redux-saga 할일 목록 리스트 API 호출 */\n\nfunction* fetch(action) {\n  yield call(implementPromiseAction, action, function* () {\n    return yield call(API.Todo.list, {});\n  });\n}\n/* redux-saga 할일 목록 추가 API 호출 */\n\n\nfunction* addtodo(action) {\n  yield call(implementPromiseAction, action, function* () {\n    console.log(action.payload);\n    const {\n      text,\n      color\n    } = action.payload;\n    return yield call(API.Todo.addlist, {\n      text,\n      color\n    });\n  });\n}\n/* redux-saga 할일 목록 삭제 API 호출 */\n\n\nfunction* removetodo(action) {\n  yield call(implementPromiseAction, action, function* () {\n    const {\n      id\n    } = action.payload;\n    return yield call(API.Todo.removetodo, {\n      id\n    });\n  });\n}\n/* redux-saga 할일 목록 체크 API 호출 */\n\n\nfunction* checktodo(action) {\n  yield call(implementPromiseAction, action, function* () {\n    const {\n      id,\n      checked\n    } = action.payload;\n    return yield call(API.Todo.checktodo, {\n      id,\n      checked\n    });\n  });\n}\n/*watch로 이벤트 구독 설정*/\n\n\nfunction* watchFetch() {\n  yield takeEvery(TODO_LIST_LOAD.request, fetch);\n}\n\nfunction* watchAddTodo() {\n  yield takeLatest(ADD_TODO.request, addtodo);\n}\n\nfunction* watchRemoveTodo() {\n  yield takeLatest(REMOVE_TODO.request, removetodo);\n}\n\nfunction* watchCheckTodo() {\n  yield takeLatest(CHECK_TODO.request, checktodo);\n}\n/*watch 함수들 트리거 등록*/\n\n\nexport default function* todoListSaga() {\n  yield all([fork(watchFetch), fork(watchAddTodo), fork(watchRemoveTodo), fork(watchCheckTodo)]);\n}","map":{"version":3,"sources":["/mnt/c/react/react-admin/src/store/sagas/todo.js"],"names":["all","call","fork","takeEvery","takeLatest","implementPromiseAction","API","TODO_LIST_LOAD","ADD_TODO","REMOVE_TODO","CHECK_TODO","fetch","action","Todo","list","addtodo","console","log","payload","text","color","addlist","removetodo","id","checktodo","checked","watchFetch","request","watchAddTodo","watchRemoveTodo","watchCheckTodo","todoListSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,oBAAvD;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SACIC,cADJ,EAEIC,QAFJ,EAGIC,WAHJ,EAIIC,UAJJ,QAKO,iBALP;AAOA;;AACA,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,QAAMX,IAAI,CAACI,sBAAD,EAAyBO,MAAzB,EAAiC,aAAa;AACpD,WAAO,MAAMX,IAAI,CAACK,GAAG,CAACO,IAAJ,CAASC,IAAV,EAAgB,EAAhB,CAAjB;AACH,GAFS,CAAV;AAGH;AAED;;;AACA,UAAUC,OAAV,CAAkBH,MAAlB,EAA0B;AACtB,QAAMX,IAAI,CAACI,sBAAD,EAAyBO,MAAzB,EAAiC,aAAa;AACpDI,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,OAAnB;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBR,MAAM,CAACM,OAA/B;AACA,WAAO,MAAMjB,IAAI,CAACK,GAAG,CAACO,IAAJ,CAASQ,OAAV,EAAmB;AAAEF,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAnB,CAAjB;AACH,GAJS,CAAV;AAKH;AAED;;;AACA,UAAUE,UAAV,CAAqBV,MAArB,EAA6B;AACzB,QAAMX,IAAI,CAACI,sBAAD,EAAyBO,MAAzB,EAAiC,aAAa;AACpD,UAAM;AAAEW,MAAAA;AAAF,QAASX,MAAM,CAACM,OAAtB;AACA,WAAO,MAAMjB,IAAI,CAACK,GAAG,CAACO,IAAJ,CAASS,UAAV,EAAsB;AAAEC,MAAAA;AAAF,KAAtB,CAAjB;AACH,GAHS,CAAV;AAIH;AAED;;;AACA,UAAUC,SAAV,CAAoBZ,MAApB,EAA4B;AACxB,QAAMX,IAAI,CAACI,sBAAD,EAAyBO,MAAzB,EAAiC,aAAa;AACpD,UAAM;AAAEW,MAAAA,EAAF;AAAME,MAAAA;AAAN,QAAkBb,MAAM,CAACM,OAA/B;AACA,WAAO,MAAMjB,IAAI,CAACK,GAAG,CAACO,IAAJ,CAASW,SAAV,EAAqB;AAAED,MAAAA,EAAF;AAAME,MAAAA;AAAN,KAArB,CAAjB;AACH,GAHS,CAAV;AAIH;AAED;;;AACA,UAAUC,UAAV,GAAuB;AACnB,QAAMvB,SAAS,CAACI,cAAc,CAACoB,OAAhB,EAAyBhB,KAAzB,CAAf;AACH;;AAED,UAAUiB,YAAV,GAAyB;AACrB,QAAMxB,UAAU,CAACI,QAAQ,CAACmB,OAAV,EAAmBZ,OAAnB,CAAhB;AACH;;AAED,UAAUc,eAAV,GAA4B;AACxB,QAAMzB,UAAU,CAACK,WAAW,CAACkB,OAAb,EAAsBL,UAAtB,CAAhB;AACH;;AAED,UAAUQ,cAAV,GAA2B;AACvB,QAAM1B,UAAU,CAACM,UAAU,CAACiB,OAAZ,EAAqBH,SAArB,CAAhB;AACH;AAED;;;AACA,eAAe,UAAUO,YAAV,GAAyB;AACpC,QAAM/B,GAAG,CAAC,CACNE,IAAI,CAACwB,UAAD,CADE,EAENxB,IAAI,CAAC0B,YAAD,CAFE,EAGN1B,IAAI,CAAC2B,eAAD,CAHE,EAIN3B,IAAI,CAAC4B,cAAD,CAJE,CAAD,CAAT;AAMH","sourcesContent":["import { all, call, fork, takeEvery, takeLatest } from 'redux-saga/effects'\r\nimport { implementPromiseAction } from '@adobe/redux-saga-promise'\r\nimport API from '../../api'\r\nimport {\r\n    TODO_LIST_LOAD,\r\n    ADD_TODO,\r\n    REMOVE_TODO,\r\n    CHECK_TODO\r\n} from '../modules/todo'\r\n\r\n/* redux-saga 할일 목록 리스트 API 호출 */\r\nfunction* fetch(action) {\r\n    yield call(implementPromiseAction, action, function* () {\r\n        return yield call(API.Todo.list, { })\r\n    })\r\n}\r\n\r\n/* redux-saga 할일 목록 추가 API 호출 */\r\nfunction* addtodo(action) {\r\n    yield call(implementPromiseAction, action, function* () {\r\n        console.log(action.payload);\r\n        const { text, color } = action.payload;\r\n        return yield call(API.Todo.addlist, { text, color })\r\n    })\r\n}\r\n\r\n/* redux-saga 할일 목록 삭제 API 호출 */\r\nfunction* removetodo(action) {\r\n    yield call(implementPromiseAction, action, function* () {\r\n        const { id } = action.payload;\r\n        return yield call(API.Todo.removetodo, { id })\r\n    })\r\n}\r\n\r\n/* redux-saga 할일 목록 체크 API 호출 */\r\nfunction* checktodo(action) {\r\n    yield call(implementPromiseAction, action, function* () {\r\n        const { id, checked } = action.payload;\r\n        return yield call(API.Todo.checktodo, { id, checked })\r\n    })\r\n}\r\n\r\n/*watch로 이벤트 구독 설정*/\r\nfunction* watchFetch() {\r\n    yield takeEvery(TODO_LIST_LOAD.request, fetch);\r\n}\r\n\r\nfunction* watchAddTodo() {\r\n    yield takeLatest(ADD_TODO.request, addtodo);\r\n}\r\n\r\nfunction* watchRemoveTodo() {\r\n    yield takeLatest(REMOVE_TODO.request, removetodo);\r\n}\r\n\r\nfunction* watchCheckTodo() {\r\n    yield takeLatest(CHECK_TODO.request, checktodo);\r\n}\r\n\r\n/*watch 함수들 트리거 등록*/\r\nexport default function* todoListSaga() {\r\n    yield all([\r\n        fork(watchFetch),\r\n        fork(watchAddTodo),\r\n        fork(watchRemoveTodo),\r\n        fork(watchCheckTodo)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}