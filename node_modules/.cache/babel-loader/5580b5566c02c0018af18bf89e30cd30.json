{"ast":null,"code":"import produce from \"immer\";\nimport { createPromiseAction } from '@adobe/redux-saga-promise';\nimport createReqTypes from \"util/createReqTypes\";\nexport const CHANGE_STATUS = 'equip/CHANGE_STATUS';\nexport const REGISTER_EQUIP = createReqTypes('REGISTER_EQUIP');\n/* 할 일 추가 API 호출 함수, createPromiseAction으로 request 호출을 진행? */\n\nexport const register = createPromiseAction(REGISTER_EQUIP.type, ({\n  type,\n  useyn,\n  code,\n  construction,\n  name,\n  model_name,\n  car_number,\n  car_identify,\n  manufacturer,\n  car_year,\n  buy_date,\n  uptime\n}) => ({\n  type,\n  useyn,\n  code,\n  construction,\n  name,\n  model_name,\n  car_number,\n  car_identify,\n  manufacturer,\n  car_year,\n  buy_date,\n  uptime\n}));\n/* 최초 상태 선언 */\n\nconst initialState = {\n  status: 'ready'\n};\n/* action 처리 함수 부분. 각 타입 별 상태 확인 */\n\nexport default function equip(state = initialState, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case REGISTER_EQUIP.request:\n        {\n          draft.status = 'request';\n          return;\n        }\n\n      case REGISTER_EQUIP.success:\n        {\n          draft.status = 'success';\n          return;\n        }\n\n      case CHANGE_STATUS:\n        {\n          draft.status = action.payload;\n          return;\n        }\n\n      default:\n        return state;\n    }\n  });\n}","map":{"version":3,"sources":["/mnt/c/react/react-admin/src/store/modules/equip.js"],"names":["produce","createPromiseAction","createReqTypes","CHANGE_STATUS","REGISTER_EQUIP","register","type","useyn","code","construction","name","model_name","car_number","car_identify","manufacturer","car_year","buy_date","uptime","initialState","status","equip","state","action","draft","request","success","payload"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AAEA,OAAO,MAAMC,aAAa,GAAG,qBAAtB;AACP,OAAO,MAAMC,cAAc,GAAGF,cAAc,CAAC,gBAAD,CAArC;AAEP;;AACA,OAAO,MAAMG,QAAQ,GAAGJ,mBAAmB,CAACG,cAAc,CAACE,IAAhB,EAAsB,CAAC;AAACA,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,YAApB;AAAkCC,EAAAA,IAAlC;AAAwCC,EAAAA,UAAxC;AAAoDC,EAAAA,UAApD;AAAgEC,EAAAA,YAAhE;AAA8EC,EAAAA,YAA9E;AAA4FC,EAAAA,QAA5F;AAAsGC,EAAAA,QAAtG;AAAgHC,EAAAA;AAAhH,CAAD,MAC5D;AAACX,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,YAApB;AAAkCC,EAAAA,IAAlC;AAAwCC,EAAAA,UAAxC;AAAoDC,EAAAA,UAApD;AAAgEC,EAAAA,YAAhE;AAA8EC,EAAAA,YAA9E;AAA4FC,EAAAA,QAA5F;AAAsGC,EAAAA,QAAtG;AAAgHC,EAAAA;AAAhH,CAD4D,CAAtB,CAApC;AAGP;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB;AAIA;;AACA,eAAe,SAASC,KAAT,CAAeC,KAAK,GAAGH,YAAvB,EAAqCI,MAArC,EAA6C;AACxD,SAAOtB,OAAO,CAACqB,KAAD,EAAQE,KAAK,IAAI;AAC3B,YAAQD,MAAM,CAAChB,IAAf;AACI,WAAKF,cAAc,CAACoB,OAApB;AAA6B;AACzBD,UAAAA,KAAK,CAACJ,MAAN,GAAe,SAAf;AACA;AACH;;AACD,WAAKf,cAAc,CAACqB,OAApB;AAA6B;AACzBF,UAAAA,KAAK,CAACJ,MAAN,GAAe,SAAf;AACA;AACH;;AACD,WAAKhB,aAAL;AAAmB;AACfoB,UAAAA,KAAK,CAACJ,MAAN,GAAeG,MAAM,CAACI,OAAtB;AACA;AACH;;AACD;AACI,eAAOL,KAAP;AAdR;AAgBH,GAjBa,CAAd;AAkBH","sourcesContent":["import produce from \"immer\"\r\nimport { createPromiseAction } from '@adobe/redux-saga-promise'\r\nimport createReqTypes from \"util/createReqTypes\"\r\n\r\nexport const CHANGE_STATUS = 'equip/CHANGE_STATUS';\r\nexport const REGISTER_EQUIP = createReqTypes('REGISTER_EQUIP')\r\n\r\n/* 할 일 추가 API 호출 함수, createPromiseAction으로 request 호출을 진행? */\r\nexport const register = createPromiseAction(REGISTER_EQUIP.type, ({type, useyn, code, construction, name, model_name, car_number, car_identify, manufacturer, car_year, buy_date, uptime})=>\r\n    ({type, useyn, code, construction, name, model_name, car_number, car_identify, manufacturer, car_year, buy_date, uptime}) );\r\n\r\n/* 최초 상태 선언 */\r\nconst initialState = {\r\n    status: 'ready'\r\n};\r\n\r\n/* action 처리 함수 부분. 각 타입 별 상태 확인 */\r\nexport default function equip(state = initialState, action) {\r\n    return produce(state, draft => {\r\n        switch (action.type) {\r\n            case REGISTER_EQUIP.request: {\r\n                draft.status = 'request';\r\n                return\r\n            }\r\n            case REGISTER_EQUIP.success: {\r\n                draft.status = 'success';\r\n                return\r\n            }\r\n            case CHANGE_STATUS:{\r\n                draft.status = action.payload;\r\n                return\r\n            }\r\n            default:\r\n                return state\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}