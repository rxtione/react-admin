{"ast":null,"code":"import { all, call, fork, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { implementPromiseAction } from '@adobe/redux-saga-promise';\nimport API from 'api';\nimport { REGISTER_EQUIP } from 'store/modules/equip';\n/* redux-saga 장비 추가 API 호출 */\n\nfunction* register(action) {\n  yield call(implementPromiseAction, action, function* () {\n    console.log('calling on register saga');\n    const {\n      type,\n      useyn,\n      code,\n      construction,\n      name,\n      model_name,\n      car_number,\n      car_identify,\n      manufacturer,\n      car_year,\n      buy_date,\n      uptime\n    } = action.payload;\n    return yield call(API.Equip.register, {\n      type,\n      useyn,\n      code,\n      construction,\n      name,\n      model_name,\n      car_number,\n      car_identify,\n      manufacturer,\n      car_year,\n      buy_date,\n      uptime\n    });\n  });\n}\n/*watch로 이벤트 구독 설정*/\n\n\nfunction* watchRegisterEquip() {\n  yield takeLatest(REGISTER_EQUIP.request, register);\n}\n/*watch 함수들 트리거 등록*/\n\n\nexport default function* todoListSaga() {\n  yield all([fork(watchRegisterEquip)]);\n}","map":{"version":3,"sources":["/mnt/c/react/react-admin/src/store/sagas/equip.js"],"names":["all","call","fork","takeEvery","takeLatest","implementPromiseAction","API","REGISTER_EQUIP","register","action","console","log","type","useyn","code","construction","name","model_name","car_number","car_identify","manufacturer","car_year","buy_date","uptime","payload","Equip","watchRegisterEquip","request","todoListSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,oBAAvD;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,SACIC,cADJ,QAEO,qBAFP;AAIA;;AACA,UAAUC,QAAV,CAAmBC,MAAnB,EAA2B;AACvB,QAAMR,IAAI,CAACI,sBAAD,EAAyBI,MAAzB,EAAiC,aAAa;AACpDC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA,YAArB;AAAmCC,MAAAA,IAAnC;AAAyCC,MAAAA,UAAzC;AAAqDC,MAAAA,UAArD;AAAiEC,MAAAA,YAAjE;AAA+EC,MAAAA,YAA/E;AAA6FC,MAAAA,QAA7F;AAAuGC,MAAAA,QAAvG;AAAiHC,MAAAA;AAAjH,QAA4Hd,MAAM,CAACe,OAAzI;AACA,WAAO,MAAMvB,IAAI,CAACK,GAAG,CAACmB,KAAJ,CAAUjB,QAAX,EAAqB;AAAEI,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA,YAArB;AAAmCC,MAAAA,IAAnC;AAAyCC,MAAAA,UAAzC;AAAqDC,MAAAA,UAArD;AAAiEC,MAAAA,YAAjE;AAA+EC,MAAAA,YAA/E;AAA6FC,MAAAA,QAA7F;AAAuGC,MAAAA,QAAvG;AAAiHC,MAAAA;AAAjH,KAArB,CAAjB;AACH,GAJS,CAAV;AAKH;AAED;;;AACA,UAAUG,kBAAV,GAA+B;AAC3B,QAAMtB,UAAU,CAACG,cAAc,CAACoB,OAAhB,EAAyBnB,QAAzB,CAAhB;AACH;AAGD;;;AACA,eAAe,UAAUoB,YAAV,GAAyB;AACpC,QAAM5B,GAAG,CAAC,CACNE,IAAI,CAACwB,kBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, call, fork, takeEvery, takeLatest } from 'redux-saga/effects'\r\nimport { implementPromiseAction } from '@adobe/redux-saga-promise'\r\nimport API from 'api'\r\nimport {\r\n    REGISTER_EQUIP\r\n} from 'store/modules/equip'\r\n\r\n/* redux-saga 장비 추가 API 호출 */\r\nfunction* register(action) {\r\n    yield call(implementPromiseAction, action, function* () {\r\n        console.log('calling on register saga');\r\n        const { type, useyn, code, construction, name, model_name, car_number, car_identify, manufacturer, car_year, buy_date, uptime } = action.payload;\r\n        return yield call(API.Equip.register, { type, useyn, code, construction, name, model_name, car_number, car_identify, manufacturer, car_year, buy_date, uptime })\r\n    })\r\n}\r\n\r\n/*watch로 이벤트 구독 설정*/\r\nfunction* watchRegisterEquip() {\r\n    yield takeLatest(REGISTER_EQUIP.request, register);\r\n}\r\n\r\n\r\n/*watch 함수들 트리거 등록*/\r\nexport default function* todoListSaga() {\r\n    yield all([\r\n        fork(watchRegisterEquip)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}