{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { ArgumentError, promiseMiddleware } from '@adobe/redux-saga-promise';\nimport modules from './modules';\nimport rootSaga from './sagas';\nconst sagaMiddleware = createSagaMiddleware({\n  onError: error => {\n    if (error instanceof ArgumentError) {\n      console.log('Oops, programmer error! I called redux-saga-promise incorrectly:', error);\n    } else {// ...\n    }\n  }\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(modules, composeEnhancers(applyMiddleware(promiseMiddleware, sagaMiddleware)));\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/mnt/c/react/react-admin/src/store/index.js"],"names":["createStore","compose","applyMiddleware","createSagaMiddleware","ArgumentError","promiseMiddleware","modules","rootSaga","sagaMiddleware","onError","error","console","log","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,2BAAjD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,MAAMC,cAAc,GAAGL,oBAAoB,CAAC;AACxCM,EAAAA,OAAO,EAAGC,KAAD,IAAW;AAChB,QAAIA,KAAK,YAAYN,aAArB,EAAoC;AAChCO,MAAAA,OAAO,CAACC,GAAR,CAAY,kEAAZ,EAAgFF,KAAhF;AACH,KAFD,MAEO,CACH;AACH;AACJ;AAPuC,CAAD,CAA3C;AASA,MAAMG,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+Cd,OAAxE;AAEA,MAAMe,KAAK,GAAGhB,WAAW,CACrBM,OADqB,EAErBO,gBAAgB,CACZX,eAAe,CACXG,iBADW,EAEXG,cAFW,CADH,CAFK,CAAzB;AAUAA,cAAc,CAACS,GAAf,CAAmBV,QAAnB;AAEA,eAAeS,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { ArgumentError, promiseMiddleware } from '@adobe/redux-saga-promise'\r\nimport modules from './modules'\r\nimport rootSaga from './sagas'\r\n\r\nconst sagaMiddleware = createSagaMiddleware({\r\n    onError: (error) => {\r\n        if (error instanceof ArgumentError) {\r\n            console.log('Oops, programmer error! I called redux-saga-promise incorrectly:', error)\r\n        } else {\r\n            // ...\r\n        }\r\n    }\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(\r\n    modules,\r\n    composeEnhancers(\r\n        applyMiddleware(\r\n            promiseMiddleware,\r\n            sagaMiddleware,\r\n        )\r\n    )\r\n)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}