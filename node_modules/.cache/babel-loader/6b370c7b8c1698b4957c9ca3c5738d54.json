{"ast":null,"code":"/**\n * @author Kuitos\n * @since 2020-02-18\n */\nimport * as tslib_1 from \"tslib\";\nexport default function retryAdapterEnhancer(adapter, options) {\n  var _this = this;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = options.times,\n      times = _a === void 0 ? 2 : _a;\n  return function (config) {\n    return tslib_1.__awaiter(_this, void 0, void 0, function () {\n      var _a, retryTimes, timeUp, count, request;\n\n      var _this = this;\n\n      return tslib_1.__generator(this, function (_b) {\n        _a = config.retryTimes, retryTimes = _a === void 0 ? times : _a;\n        timeUp = false;\n        count = 0;\n\n        request = function () {\n          return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var e_1;\n            return tslib_1.__generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  _a.trys.push([0, 2,, 3]);\n\n                  return [4\n                  /*yield*/\n                  , adapter(config)];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _a.sent()];\n\n                case 2:\n                  e_1 = _a.sent();\n                  timeUp = retryTimes === count;\n\n                  if (timeUp) {\n                    throw e_1;\n                  }\n\n                  count++;\n                  /* istanbul ignore next */\n\n                  if (process.env.LOGGER_LEVEL === 'info') {\n                    console.info(\"[axios-extensions] request start retrying --> url: \" + config.url + \" , time: \" + count);\n                  }\n\n                  return [2\n                  /*return*/\n                  , request()];\n\n                case 3:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        };\n\n        return [2\n        /*return*/\n        , request()];\n      });\n    });\n  };\n}","map":{"version":3,"sources":["../src/retryAdapterEnhancer.ts"],"names":[],"mappings":"AAAA;;;;;AAiBA,eAAc,SAAA,oBAAA,CAA+B,OAA/B,EAAsD,OAAtD,EAA2E;AAAzF,MAAA,KAAA,GAAA,IAAA;;AAAoE,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAAqB;;AAEhF,MAAA,EAAA,GAAA,OAAA,CAAA,KAAA;AAAA,MAAA,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAER,SAAO,UAAM,MAAN,EAAY;AAAA,WAAA,OAAA,CAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;AAEV,QAAA,EAAA,GAAuB,MAAM,CAAX,UAAlB,EAAA,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAAlB;AAEJ,QAAA,MAAM,GAAG,KAAT;AACA,QAAA,KAAK,GAAG,CAAR;;AACE,QAAA,OAAO,GAAG,YAAA;AAAA,iBAAA,OAAA,CAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;;AAEP,yBAAA,CAAA;AAAA;AAAA,oBAAM,OAAO,CAAC,MAAD,CAAb,CAAA;;;AAAP,yBAAA,CAAA;AAAA;AAAA,oBAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;AAEA,kBAAA,MAAM,GAAG,UAAU,KAAK,KAAxB;;AACA,sBAAI,MAAJ,EAAY;AACX,0BAAM,GAAN;AACA;;AAED,kBAAA,KAAK;AAEL;;AACA,sBAAI,OAAO,CAAC,GAAR,CAAY,YAAZ,KAA6B,MAAjC,EAAyC;AACxC,oBAAA,OAAO,CAAC,IAAR,CAAa,wDAAsD,MAAM,CAAC,GAA7D,GAAgE,WAAhE,GAA4E,KAAzF;AACA;;AAED,yBAAA,CAAA;AAAA;AAAA,oBAAO,OAAO,EAAd,CAAA;;;;;;;;WAhBc,CAAA;AAkBf,SAlBK;;AAoBN,eAAA,CAAA;AAAA;AAAA,UAAO,OAAO,EAAd,CAAA;;KA1BkB,CAAA;AA2BlB,GA3BD;AA4BA","sourceRoot":"","sourcesContent":["/**\n * @author Kuitos\n * @since 2020-02-18\n */\nimport * as tslib_1 from \"tslib\";\nexport default function retryAdapterEnhancer(adapter, options) {\n    var _this = this;\n    if (options === void 0) { options = {}; }\n    var _a = options.times, times = _a === void 0 ? 2 : _a;\n    return function (config) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n        var _a, retryTimes, timeUp, count, request;\n        var _this = this;\n        return tslib_1.__generator(this, function (_b) {\n            _a = config.retryTimes, retryTimes = _a === void 0 ? times : _a;\n            timeUp = false;\n            count = 0;\n            request = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var e_1;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            _a.trys.push([0, 2, , 3]);\n                            return [4 /*yield*/, adapter(config)];\n                        case 1: return [2 /*return*/, _a.sent()];\n                        case 2:\n                            e_1 = _a.sent();\n                            timeUp = retryTimes === count;\n                            if (timeUp) {\n                                throw e_1;\n                            }\n                            count++;\n                            /* istanbul ignore next */\n                            if (process.env.LOGGER_LEVEL === 'info') {\n                                console.info(\"[axios-extensions] request start retrying --> url: \" + config.url + \" , time: \" + count);\n                            }\n                            return [2 /*return*/, request()];\n                        case 3: return [2 /*return*/];\n                    }\n                });\n            }); };\n            return [2 /*return*/, request()];\n        });\n    }); };\n}\n//# sourceMappingURL=retryAdapterEnhancer.js.map"]},"metadata":{},"sourceType":"module"}