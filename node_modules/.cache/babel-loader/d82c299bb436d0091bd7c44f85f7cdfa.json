{"ast":null,"code":"import _regeneratorRuntime from\"/mnt/c/react/react-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetch),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(addtodo),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(removetodo),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(checktodo),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(watchFetch),_marked6=/*#__PURE__*/_regeneratorRuntime.mark(watchAddTodo),_marked7=/*#__PURE__*/_regeneratorRuntime.mark(watchRemoveTodo),_marked8=/*#__PURE__*/_regeneratorRuntime.mark(watchCheckTodo),_marked9=/*#__PURE__*/_regeneratorRuntime.mark(todoListSaga);import{all,call,fork,takeEvery,takeLatest}from'redux-saga/effects';import{implementPromiseAction}from'@adobe/redux-saga-promise';import API from'../../api';import{TODO_LIST_LOAD,ADD_TODO,REMOVE_TODO,CHECK_TODO}from'../modules/todo';/* redux-saga 할일 목록 리스트 API 호출 */function fetch(action){return _regeneratorRuntime.wrap(function fetch$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return call(implementPromiseAction,action,/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return call(API.Todo.list,{});case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));case 2:case\"end\":return _context2.stop();}}},_marked);}/* redux-saga 할일 목록 추가 API 호출 */function addtodo(action){return _regeneratorRuntime.wrap(function addtodo$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return call(implementPromiseAction,action,/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _action$payload,text,color;return _regeneratorRuntime.wrap(function _callee2$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log(action.payload);_action$payload=action.payload,text=_action$payload.text,color=_action$payload.color;_context3.next=4;return call(API.Todo.addlist,{text:text,color:color});case 4:return _context3.abrupt(\"return\",_context3.sent);case 5:case\"end\":return _context3.stop();}}},_callee2);}));case 2:case\"end\":return _context4.stop();}}},_marked2);}/* redux-saga 할일 목록 삭제 API 호출 */function removetodo(action){return _regeneratorRuntime.wrap(function removetodo$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return call(implementPromiseAction,action,/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var id;return _regeneratorRuntime.wrap(function _callee3$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:id=action.payload.id;_context5.next=3;return call(API.Todo.removetodo,{id:id});case 3:return _context5.abrupt(\"return\",_context5.sent);case 4:case\"end\":return _context5.stop();}}},_callee3);}));case 2:case\"end\":return _context6.stop();}}},_marked3);}/* redux-saga 할일 목록 체크 API 호출 */function checktodo(action){return _regeneratorRuntime.wrap(function checktodo$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return call(implementPromiseAction,action,/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var _action$payload2,id,checked;return _regeneratorRuntime.wrap(function _callee4$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_action$payload2=action.payload,id=_action$payload2.id,checked=_action$payload2.checked;_context7.next=3;return call(API.Todo.checktodo,{id:id,checked:checked});case 3:return _context7.abrupt(\"return\",_context7.sent);case 4:case\"end\":return _context7.stop();}}},_callee4);}));case 2:case\"end\":return _context8.stop();}}},_marked4);}/*watch로 이벤트 구독 설정*/function watchFetch(){return _regeneratorRuntime.wrap(function watchFetch$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return takeEvery(TODO_LIST_LOAD.request,fetch);case 2:case\"end\":return _context9.stop();}}},_marked5);}function watchAddTodo(){return _regeneratorRuntime.wrap(function watchAddTodo$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.next=2;return takeLatest(ADD_TODO.request,addtodo);case 2:case\"end\":return _context10.stop();}}},_marked6);}function watchRemoveTodo(){return _regeneratorRuntime.wrap(function watchRemoveTodo$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return takeLatest(REMOVE_TODO.request,removetodo);case 2:case\"end\":return _context11.stop();}}},_marked7);}function watchCheckTodo(){return _regeneratorRuntime.wrap(function watchCheckTodo$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:_context12.next=2;return takeLatest(CHECK_TODO.request,checktodo);case 2:case\"end\":return _context12.stop();}}},_marked8);}/*watch 함수들 트리거 등록*/export default function todoListSaga(){return _regeneratorRuntime.wrap(function todoListSaga$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:_context13.next=2;return all([fork(watchFetch),fork(watchAddTodo),fork(watchRemoveTodo),fork(watchCheckTodo)]);case 2:case\"end\":return _context13.stop();}}},_marked9);}","map":{"version":3,"sources":["/mnt/c/react/react-admin/src/store/sagas/todo.js"],"names":["fetch","addtodo","removetodo","checktodo","watchFetch","watchAddTodo","watchRemoveTodo","watchCheckTodo","todoListSaga","all","call","fork","takeEvery","takeLatest","implementPromiseAction","API","TODO_LIST_LOAD","ADD_TODO","REMOVE_TODO","CHECK_TODO","action","Todo","list","console","log","payload","text","color","addlist","id","checked","request"],"mappings":"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","sourcesContent":["import { all, call, fork, takeEvery, takeLatest } from 'redux-saga/effects'\r\nimport { implementPromiseAction } from '@adobe/redux-saga-promise'\r\nimport API from '../../api'\r\nimport {\r\n    TODO_LIST_LOAD,\r\n    ADD_TODO,\r\n    REMOVE_TODO,\r\n    CHECK_TODO\r\n} from '../modules/todo'\r\n\r\n/* redux-saga 할일 목록 리스트 API 호출 */\r\nfunction* fetch(action) {\r\n    yield call(implementPromiseAction, action, function* () {\r\n        return yield call(API.Todo.list, { })\r\n    })\r\n}\r\n\r\n/* redux-saga 할일 목록 추가 API 호출 */\r\nfunction* addtodo(action) {\r\n    yield call(implementPromiseAction, action, function* () {\r\n        console.log(action.payload);\r\n        const { text, color } = action.payload;\r\n        return yield call(API.Todo.addlist, { text, color })\r\n    })\r\n}\r\n\r\n/* redux-saga 할일 목록 삭제 API 호출 */\r\nfunction* removetodo(action) {\r\n    yield call(implementPromiseAction, action, function* () {\r\n        const { id } = action.payload;\r\n        return yield call(API.Todo.removetodo, { id })\r\n    })\r\n}\r\n\r\n/* redux-saga 할일 목록 체크 API 호출 */\r\nfunction* checktodo(action) {\r\n    yield call(implementPromiseAction, action, function* () {\r\n        const { id, checked } = action.payload;\r\n        return yield call(API.Todo.checktodo, { id, checked })\r\n    })\r\n}\r\n\r\n/*watch로 이벤트 구독 설정*/\r\nfunction* watchFetch() {\r\n    yield takeEvery(TODO_LIST_LOAD.request, fetch);\r\n}\r\n\r\nfunction* watchAddTodo() {\r\n    yield takeLatest(ADD_TODO.request, addtodo);\r\n}\r\n\r\nfunction* watchRemoveTodo() {\r\n    yield takeLatest(REMOVE_TODO.request, removetodo);\r\n}\r\n\r\nfunction* watchCheckTodo() {\r\n    yield takeLatest(CHECK_TODO.request, checktodo);\r\n}\r\n\r\n/*watch 함수들 트리거 등록*/\r\nexport default function* todoListSaga() {\r\n    yield all([\r\n        fork(watchFetch),\r\n        fork(watchAddTodo),\r\n        fork(watchRemoveTodo),\r\n        fork(watchCheckTodo)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}