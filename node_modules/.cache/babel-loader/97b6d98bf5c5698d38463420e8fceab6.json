{"ast":null,"code":"/**\n * @author Kuitos\n * @homepage https://github.com/kuitos/\n * @since 2017-10-12\n */\nimport * as tslib_1 from \"tslib\";\nimport LRUCache from 'lru-cache';\nimport buildSortedURL from './utils/buildSortedURL';\nimport isCacheLike from './utils/isCacheLike';\nvar FIVE_MINUTES = 1000 * 60 * 5;\nvar CAPACITY = 100;\nexport default function cacheAdapterEnhancer(adapter, options) {\n  var _this = this;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = options.enabledByDefault,\n      enabledByDefault = _a === void 0 ? true : _a,\n      _b = options.cacheFlag,\n      cacheFlag = _b === void 0 ? 'cache' : _b,\n      _c = options.defaultCache,\n      defaultCache = _c === void 0 ? new LRUCache({\n    maxAge: FIVE_MINUTES,\n    max: CAPACITY\n  }) : _c;\n  return function (config) {\n    var url = config.url,\n        method = config.method,\n        params = config.params,\n        paramsSerializer = config.paramsSerializer,\n        forceUpdate = config.forceUpdate;\n    var useCache = config[cacheFlag] !== void 0 && config[cacheFlag] !== null ? config[cacheFlag] : enabledByDefault;\n\n    if (method === 'get' && useCache) {\n      // if had provide a specified cache, then use it instead\n      var cache_1 = isCacheLike(useCache) ? useCache : defaultCache; // build the index according to the url and params\n\n      var index_1 = buildSortedURL(url, params, paramsSerializer);\n      var responsePromise = cache_1.get(index_1);\n\n      if (!responsePromise || forceUpdate) {\n        responsePromise = function () {\n          return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var reason_1;\n            return tslib_1.__generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  _a.trys.push([0, 2,, 3]);\n\n                  return [4\n                  /*yield*/\n                  , adapter(config)];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _a.sent()];\n\n                case 2:\n                  reason_1 = _a.sent();\n                  cache_1.del(index_1);\n                  throw reason_1;\n\n                case 3:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        }(); // put the promise for the non-transformed response into cache as a placeholder\n\n\n        cache_1.set(index_1, responsePromise);\n        return responsePromise;\n      }\n      /* istanbul ignore next */\n\n\n      if (process.env.LOGGER_LEVEL === 'info') {\n        // eslint-disable-next-line no-console\n        console.info(\"[axios-extensions] request cached by cache adapter --> url: \" + index_1);\n      }\n\n      return responsePromise;\n    }\n\n    return adapter(config);\n  };\n}","map":{"version":3,"sources":["../src/cacheAdapterEnhancer.ts"],"names":[],"mappings":"AAAA;;;;;;AAOA,OAAO,QAAP,MAAqB,WAArB;AACA,OAAO,cAAP,MAA2B,wBAA3B;AACA,OAAO,WAAP,MAAwB,qBAAxB;AASA,IAAM,YAAY,GAAG,OAAO,EAAP,GAAY,CAAjC;AACA,IAAM,QAAQ,GAAG,GAAjB;AAgBA,eAAc,SAAA,oBAAA,CAA+B,OAA/B,EAAsD,OAAtD,EAA2E;AAAzF,MAAA,KAAA,GAAA,IAAA;;AAAoE,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,EAAA;AAAqB;;AAGvF,MAAA,EAAA,GAAA,OAAA,CAAA,gBAAA;AAAA,MAAA,gBAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,EAAA;AAAA,MACA,EAAA,GAAA,OAAA,CAAA,SADA;AAAA,MACA,SAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,OAAA,GAAA,EADA;AAAA,MAEA,EAAA,GAAA,OAAA,CAAA,YAFA;AAAA,MAEA,YAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,IAAA,QAAA,CAAA;AAAA,IAAA,MAAA,EAAA,YAAA;AAAA,IAAA,GAAA,EAAA;AAAA,GAAA,CAAA,GAAA,EAFA;AAKD,SAAO,UAAA,MAAA,EAAM;AAEJ,QAAA,GAAA,GAAA,MAAA,CAAA,GAAA;AAAA,QAAK,MAAA,GAAA,MAAA,CAAA,MAAL;AAAA,QAAa,MAAA,GAAA,MAAA,CAAA,MAAb;AAAA,QAAqB,gBAAA,GAAA,MAAA,CAAA,gBAArB;AAAA,QAAuC,WAAA,GAAA,MAAA,CAAA,WAAvC;AACR,QAAM,QAAQ,GAAK,MAAc,CAAC,SAAD,CAAd,KAA8B,KAAK,CAAnC,IAAyC,MAAc,CAAC,SAAD,CAAd,KAA8B,IAAzE,GACb,MAAc,CAAC,SAAD,CADD,GAEd,gBAFH;;AAIA,QAAI,MAAM,KAAK,KAAX,IAAoB,QAAxB,EAAkC;AAEjC;AACA,UAAM,OAAK,GAA6B,WAAW,CAAC,QAAD,CAAX,GAAwB,QAAxB,GAAmC,YAA3E,CAHiC,CAKjC;;AACA,UAAM,OAAK,GAAG,cAAc,CAAC,GAAD,EAAM,MAAN,EAAc,gBAAd,CAA5B;AAEA,UAAI,eAAe,GAAG,OAAK,CAAC,GAAN,CAAU,OAAV,CAAtB;;AAEA,UAAI,CAAC,eAAD,IAAoB,WAAxB,EAAqC;AAEpC,QAAA,eAAe,GAAI,YAAA;AAAA,iBAAA,OAAA,CAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;;AAGV,yBAAA,CAAA;AAAA;AAAA,oBAAM,OAAO,CAAC,MAAD,CAAb,CAAA;;;AAAP,yBAAA,CAAA;AAAA;AAAA,oBAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;AAEA,kBAAA,OAAK,CAAC,GAAN,CAAU,OAAV;AACA,wBAAM,QAAN;;;;;;;;WANiB,CAAA;AASlB,SATiB,EAAlB,CAFoC,CAapC;;;AACA,QAAA,OAAK,CAAC,GAAN,CAAU,OAAV,EAAiB,eAAjB;AAEA,eAAO,eAAP;AACA;AAED;;;AACA,UAAI,OAAO,CAAC,GAAR,CAAY,YAAZ,KAA6B,MAAjC,EAAyC;AACxC;AACA,QAAA,OAAO,CAAC,IAAR,CAAa,iEAA+D,OAA5E;AACA;;AAED,aAAO,eAAP;AACA;;AAED,WAAO,OAAO,CAAC,MAAD,CAAd;AACA,GA9CD;AA+CA","sourceRoot":"","sourcesContent":["/**\n * @author Kuitos\n * @homepage https://github.com/kuitos/\n * @since 2017-10-12\n */\nimport * as tslib_1 from \"tslib\";\nimport LRUCache from 'lru-cache';\nimport buildSortedURL from './utils/buildSortedURL';\nimport isCacheLike from './utils/isCacheLike';\nvar FIVE_MINUTES = 1000 * 60 * 5;\nvar CAPACITY = 100;\nexport default function cacheAdapterEnhancer(adapter, options) {\n    var _this = this;\n    if (options === void 0) { options = {}; }\n    var _a = options.enabledByDefault, enabledByDefault = _a === void 0 ? true : _a, _b = options.cacheFlag, cacheFlag = _b === void 0 ? 'cache' : _b, _c = options.defaultCache, defaultCache = _c === void 0 ? new LRUCache({ maxAge: FIVE_MINUTES, max: CAPACITY }) : _c;\n    return function (config) {\n        var url = config.url, method = config.method, params = config.params, paramsSerializer = config.paramsSerializer, forceUpdate = config.forceUpdate;\n        var useCache = (config[cacheFlag] !== void 0 && config[cacheFlag] !== null)\n            ? config[cacheFlag]\n            : enabledByDefault;\n        if (method === 'get' && useCache) {\n            // if had provide a specified cache, then use it instead\n            var cache_1 = isCacheLike(useCache) ? useCache : defaultCache;\n            // build the index according to the url and params\n            var index_1 = buildSortedURL(url, params, paramsSerializer);\n            var responsePromise = cache_1.get(index_1);\n            if (!responsePromise || forceUpdate) {\n                responsePromise = (function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                    var reason_1;\n                    return tslib_1.__generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                _a.trys.push([0, 2, , 3]);\n                                return [4 /*yield*/, adapter(config)];\n                            case 1: return [2 /*return*/, _a.sent()];\n                            case 2:\n                                reason_1 = _a.sent();\n                                cache_1.del(index_1);\n                                throw reason_1;\n                            case 3: return [2 /*return*/];\n                        }\n                    });\n                }); })();\n                // put the promise for the non-transformed response into cache as a placeholder\n                cache_1.set(index_1, responsePromise);\n                return responsePromise;\n            }\n            /* istanbul ignore next */\n            if (process.env.LOGGER_LEVEL === 'info') {\n                // eslint-disable-next-line no-console\n                console.info(\"[axios-extensions] request cached by cache adapter --> url: \" + index_1);\n            }\n            return responsePromise;\n        }\n        return adapter(config);\n    };\n}\n//# sourceMappingURL=cacheAdapterEnhancer.js.map"]},"metadata":{},"sourceType":"module"}