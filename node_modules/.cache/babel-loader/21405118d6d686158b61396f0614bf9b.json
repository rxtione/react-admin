{"ast":null,"code":"import axios from 'axios';\nimport { cacheAdapterEnhancer } from 'axios-extensions';\nimport axiosCancel from 'axios-cancel';\n/*import Cookies from 'js-cookie'*/\n\n/* http 객체 생성 :: axios 모듈 사용*/\n\nexport const http = axios.create({\n  baseURL: 'http://45.120.69.125:8001/react',\n  adapter: cacheAdapterEnhancer(axios.defaults.adapter, {\n    enabledByDefault: false\n  })\n});\naxiosCancel(http, {\n  debug: false // process.env.NODE_ENV === 'development'\n\n});\nexport const CancelToken = axios.CancelToken;\n/*해야 할 일 API 목록 리스트 정의 :: list, addlist, removetodo, checktodo */\n\nconst Todo = {\n  list: ({\n    config\n  } = {}) => {\n    return http.get(`/list`, null, config);\n  },\n  addlist: ({\n    text,\n    color,\n    config\n  } = {}) => {\n    return http.post(`/addlist`, {\n      text,\n      color\n    }, config);\n  },\n  removetodo: ({\n    id,\n    config\n  } = {}) => {\n    return http.post(`/removetodo`, {\n      id\n    }, config);\n  },\n  checktodo: ({\n    id,\n    checked,\n    config\n  } = {}) => {\n    return http.post(`/checktodo`, {\n      id,\n      checked\n    }, config);\n  }\n};\nconst Equip = {\n  register: ({\n    type,\n    useyn,\n    code,\n    construction,\n    name,\n    model_name,\n    car_number,\n    car_identify,\n    manufacturer,\n    car_year,\n    buy_date,\n    uptime,\n    config\n  } = {}) => {\n    return http.post(`/register`, {\n      type,\n      useyn,\n      code,\n      construction,\n      name,\n      model_name,\n      car_number,\n      car_identify,\n      manufacturer,\n      car_year,\n      buy_date,\n      uptime\n    }, config);\n  }\n};\nexport default {\n  Todo\n};","map":{"version":3,"sources":["/mnt/c/react/react-admin/src/api/index.js"],"names":["axios","cacheAdapterEnhancer","axiosCancel","http","create","baseURL","adapter","defaults","enabledByDefault","debug","CancelToken","Todo","list","config","get","addlist","text","color","post","removetodo","id","checktodo","checked","Equip","register","type","useyn","code","construction","name","model_name","car_number","car_identify","manufacturer","car_year","buy_date","uptime"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA;;AAEA;;AACA,OAAO,MAAMC,IAAI,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE,iCADoB;AAE7BC,EAAAA,OAAO,EAAEL,oBAAoB,CAACD,KAAK,CAACO,QAAN,CAAeD,OAAhB,EAAyB;AAAEE,IAAAA,gBAAgB,EAAE;AAApB,GAAzB;AAFA,CAAb,CAAb;AAKPN,WAAW,CAACC,IAAD,EAAO;AACdM,EAAAA,KAAK,EAAE,KADO,CACD;;AADC,CAAP,CAAX;AAIA,OAAO,MAAMC,WAAW,GAAGV,KAAK,CAACU,WAA1B;AAEP;;AACA,MAAMC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA;AAAF,MAAa,EAAd,KAAqB;AACvB,WAAOV,IAAI,CAACW,GAAL,CAAU,OAAV,EAAkB,IAAlB,EAAwBD,MAAxB,CAAP;AACH,GAHQ;AAITE,EAAAA,OAAO,EAAE,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeJ,IAAAA;AAAf,MAA0B,EAA3B,KAAkC;AACvC,WAAOV,IAAI,CAACe,IAAL,CAAW,UAAX,EAAsB;AAACF,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAtB,EAAqCJ,MAArC,CAAP;AACH,GANQ;AAOTM,EAAAA,UAAU,EAAE,CAAC;AAACC,IAAAA,EAAD;AAAKP,IAAAA;AAAL,MAAe,EAAhB,KAAuB;AAC/B,WAAOV,IAAI,CAACe,IAAL,CAAW,aAAX,EAAyB;AAACE,MAAAA;AAAD,KAAzB,EAA+BP,MAA/B,CAAP;AACH,GATQ;AAUTQ,EAAAA,SAAS,EAAE,CAAC;AAACD,IAAAA,EAAD;AAAKE,IAAAA,OAAL;AAAcT,IAAAA;AAAd,MAAwB,EAAzB,KAAgC;AACvC,WAAOV,IAAI,CAACe,IAAL,CAAW,YAAX,EAAwB;AAACE,MAAAA,EAAD;AAAKE,MAAAA;AAAL,KAAxB,EAAuCT,MAAvC,CAAP;AACH;AAZQ,CAAb;AAeA,MAAMU,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAC,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,YAApB;AAAkCC,IAAAA,IAAlC;AAAwCC,IAAAA,UAAxC;AAAoDC,IAAAA,UAApD;AAAgEC,IAAAA,YAAhE;AAA8EC,IAAAA,YAA9E;AAA4FC,IAAAA,QAA5F;AAAsGC,IAAAA,QAAtG;AAAgHC,IAAAA,MAAhH;AAAwHvB,IAAAA;AAAxH,MAAkI,EAAnI,KAA0I;AAC/I,WAAOV,IAAI,CAACe,IAAL,CAAW,WAAX,EAAuB;AAACO,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA,IAAd;AAAoBC,MAAAA,YAApB;AAAkCC,MAAAA,IAAlC;AAAwCC,MAAAA,UAAxC;AAAoDC,MAAAA,UAApD;AAAgEC,MAAAA,YAAhE;AAA8EC,MAAAA,YAA9E;AAA4FC,MAAAA,QAA5F;AAAsGC,MAAAA,QAAtG;AAAgHC,MAAAA;AAAhH,KAAvB,EAAgJvB,MAAhJ,CAAP;AACH;AAHS,CAAd;AAMA,eAAe;AACXF,EAAAA;AADW,CAAf","sourcesContent":["import axios from 'axios'\r\nimport { cacheAdapterEnhancer } from 'axios-extensions'\r\nimport axiosCancel from 'axios-cancel'\r\n/*import Cookies from 'js-cookie'*/\r\n\r\n/* http 객체 생성 :: axios 모듈 사용*/\r\nexport const http = axios.create({\r\n    baseURL: 'http://45.120.69.125:8001/react',\r\n    adapter: cacheAdapterEnhancer(axios.defaults.adapter, { enabledByDefault: false })\r\n})\r\n\r\naxiosCancel(http, {\r\n    debug: false // process.env.NODE_ENV === 'development'\r\n})\r\n\r\nexport const CancelToken = axios.CancelToken\r\n\r\n/*해야 할 일 API 목록 리스트 정의 :: list, addlist, removetodo, checktodo */\r\nconst Todo = {\r\n    list: ({ config } = {}) => {\r\n        return http.get(`/list`, null, config)\r\n    },\r\n    addlist: ({ text, color, config } = {}) => {\r\n        return http.post(`/addlist`, {text, color}, config)\r\n    },\r\n    removetodo: ({id, config} = {}) => {\r\n        return http.post(`/removetodo`, {id}, config)\r\n    },\r\n    checktodo: ({id, checked, config} = {}) => {\r\n        return http.post(`/checktodo`, {id, checked}, config)\r\n    }\r\n}\r\n\r\nconst Equip = {\r\n    register:({type, useyn, code, construction, name, model_name, car_number, car_identify, manufacturer, car_year, buy_date, uptime, config} = {}) => {\r\n        return http.post(`/register`, {type, useyn, code, construction, name, model_name, car_number, car_identify, manufacturer, car_year, buy_date, uptime}, config)\r\n    }\r\n}\r\n\r\nexport default {\r\n    Todo,\r\n}"]},"metadata":{},"sourceType":"module"}